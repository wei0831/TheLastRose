import Zero
import Events
import Property
import VectorMath
import Action
Vec4 = VectorMath.Vec4
import random
class LevelStart:
    self.HUDSpace = Property.Resource("Space")
    def Initialize(self, initializer):
        
        
        if not self.Owner.SoundEmitter:
            
            self.Owner.AddComponentByName("SoundEmitter")
        Zero.Connect(self.Space, Events.LogicUpdate, self.OnLogicUpdate)
        
        
        
        
        if self.Space.CurrentLevel.Name == "Level1" or self.Space.CurrentLevel.Name == "Level2":
            self.Space.SoundSpace.PlayMusic("BackgroundMusic")
            self.Space.SoundSpace.PlayCue("RainCue")

        elif self.Space.CurrentLevel.Name == "Level3":
            self.Space.SoundSpace.PlayMusic("Cave")
            self.sequence = Action.Sequence(self.Owner.Actions)
            self.PlayAmbient()
        elif self.Space.CurrentLevel.Name == "Level4" or self.Space.CurrentLevel.Name == "Level5":
            self.Space.SoundSpace.PlayMusic("SwampLoop")
            
            
        self.player = self.Space.FindObjectByName("Player")
        self.camera = self.Space.FindObjectByName("Camera")
        self.CurrentUpdate = self.UpdateCamera

        

    def PlayAmbient(self):
        sound = "DripCue" if random.randint(0,1) == 1 else "DripCue2"
        self.Space.SoundSpace.PlayCue(sound)
        
        Action.Delay(self.sequence,random.random()*7 + 7)
        Action.Call(self.sequence, self.PlayAmbient)
        
    def UpdateCamera(self):
        self.camera.CameraFunction.SetCameraFade(Vec4(1,1,1,1),Vec4(1,1,1,0),0.03,0)
        self.CurrentUpdate = self.UpdateKey
        
    def UpdateKey(self):

        if Zero.Keyboard.KeyIsDown(Zero.Keys.Six):
            self.Space.LoadLevel("Level1")
        elif Zero.Keyboard.KeyIsDown(Zero.Keys.Seven):
            self.Space.LoadLevel("Level2")
        elif Zero.Keyboard.KeyIsDown(Zero.Keys.Eight):
            self.Space.LoadLevel("Level3")
        elif Zero.Keyboard.KeyIsDown(Zero.Keys.Nine):
            self.Space.LoadLevel("Level4")
        elif Zero.Keyboard.KeyIsDown(Zero.Keys.Zero):
            self.Space.LoadLevel("Level5")
        elif Zero.Keyboard.KeyIsDown(Zero.Keys.Equal):
            self.player.HealthStatus.ResetHealth()
            self.player.HealthStatus.ResetRegen()
            self.player.BlinkAnim.Active = False
            self.player.HealthStatus.Updatable = False
        elif Zero.Keyboard.KeyIsDown(Zero.Keys.Minus):
            self.player.HealthStatus.Updatable = True
            
    def OnLogicUpdate(self, UpdateEvent):
        self.CurrentUpdate()
        #Zero.Disconnect(self.Space, Events.LogicUpdate, self)
        
        
        

Zero.RegisterComponent("LevelStart", LevelStart)